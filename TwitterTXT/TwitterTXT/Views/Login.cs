using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace TwitterTXT.View
{
    class Login
    {
        /// <summary>
        /// This method does the login for the end user. It opens the url generated by <code>TwitterInterface</code> and waits 
        /// for the PIN to be entered by the user. If the PIN is valid the method ends. If not the method goes into a loop 
        /// and the loop ends once a succesful pin was entered.
        /// </summary>
        /// <param name="ti">A TwitterInterface Instantce</param>
        public static void doLogin(TwitterInterface ti)
        {
            Console.BackgroundColor = ConsoleColor.DarkCyan;
            Console.Clear();
            TextUtils.logoName(21,2);
            Console.BackgroundColor = ConsoleColor.Gray;
            TextUtils.blankRegion(Console.BufferWidth / 4, 15, Console.BufferWidth / 2, 4);
            //Console.WriteLine("A window in your default broswer should have lanuched.\nEnter the PIN shown:");
            string message = "/f00A window in your default browser should have \nlaunched.\nEnter the PIN shown:\n";
            TextUtils.writeTextInBox(message, Console.BufferWidth / 4, 15, Console.BufferWidth / 2);
            displayLaunchUri(ti);
            String pin = Console.ReadLine();
            Boolean loginResult = ti.setOAuthWithPin(pin);
            while (!loginResult)
            {
                // The following line results in an error
                //TextUtils.writeFormattedText("/f" + TextUtils.colorToString(TextUtils.colors.cyan) + "The given PIN was invalid. A new window has appeared." + "/f" + TextUtils.colorToString(TextUtils.colors.gray) + " ");
                //Console.WriteLine("The given PIN was invalid. A new window has appeared.\nPlease enter the new PIN.");
                string errorMessage = "The given PIN was invalid. A new window has appeared.\nPlease enter the new PIN.";
                TextUtils.blankRegion(Console.BufferWidth / 4, 15, Console.BufferWidth / 2, 4);
                TextUtils.writeTextInBox(errorMessage, Console.BufferWidth / 4, 15, Console.BufferWidth / 2);
                displayLaunchUri(ti);
                pin = Console.ReadLine();
                loginResult = ti.setOAuthWithPin(pin);
                // May need to place a wait here to prevent API overrate issues -- Matthew Burket (04/11/2014)
            }
            Console.ForegroundColor = ConsoleColor.Gray;
            Console.BackgroundColor = ConsoleColor.Black;
        }

        private static void displayLaunchUri(TwitterInterface ti)
        {
            String url = ti.getLoginUrl();
            System.Diagnostics.Process.Start(url);
        }

    }
}
